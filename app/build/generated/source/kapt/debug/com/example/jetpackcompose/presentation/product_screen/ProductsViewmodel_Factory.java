// Generated by Dagger (https://dagger.dev).
package com.example.jetpackcompose.presentation.product_screen;

import com.example.jetpackcompose.domain.repositoryDomain.ProductRepositoryDomain;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class ProductsViewmodel_Factory implements Factory<ProductsViewmodel> {
  private final Provider<ProductRepositoryDomain> productRepositoryProvider;

  public ProductsViewmodel_Factory(Provider<ProductRepositoryDomain> productRepositoryProvider) {
    this.productRepositoryProvider = productRepositoryProvider;
  }

  @Override
  public ProductsViewmodel get() {
    return newInstance(productRepositoryProvider.get());
  }

  public static ProductsViewmodel_Factory create(
      Provider<ProductRepositoryDomain> productRepositoryProvider) {
    return new ProductsViewmodel_Factory(productRepositoryProvider);
  }

  public static ProductsViewmodel newInstance(ProductRepositoryDomain productRepository) {
    return new ProductsViewmodel(productRepository);
  }
}
